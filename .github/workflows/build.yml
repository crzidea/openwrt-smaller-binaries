# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on: 
  workflow_dispatch:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      # with:
        # go-version: '1.23'

    - name: Build
      run: |
        curl https://api.github.com/repos/tailscale/tailscale/releases/latest | jq ".tarball_url" --raw-output | xargs wget --output-file tailscale.tar.gz
        tar xzf tailscale.tar.gz
        cd tailscale
        GOOS=linux GOARCH=arm64 go build -o tailscale.combined -tags ts_include_cli,ts_omit_aws,ts_omit_bird,ts_omit_tap,ts_omit_kube -ldflags="-s -w" ./cmd/tailscaled
        curl https://api.github.com/repos/upx/upx/releases/latest | jq '.assets[] | select(.name | test("-amd64_linux.tar.xz$")) | .browser_download_url' --raw-output | xargs wget
        tar xzf upx-*-amd64_linux.tar.xz
        upx-*/upx --lzma --best tailscale.combined

    - uses: actions/upload-artifact@v4
      with:
        name: tailscale.combined
        path: tailscale.combined

